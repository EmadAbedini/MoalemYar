<Application x:Class="MoalemYar.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MoalemYar"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MoalemYar;component/Resources/Fonts/FontsDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="myWindow" TargetType="Window">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
                <Setter Property="TextOptions.TextHintingMode" Value="Auto" />
                <Setter Property="FontFamily" Value="{StaticResource TeacherYar.Fonts.IRANSans}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="MinWidth" Value="1300" />
                <Setter Property="MinHeight" Value="600" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="WindowStyle" Value="None" />
            </Style>
            <Style x:Key="myUserControl" TargetType="UserControl">
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
                <Setter Property="TextOptions.TextHintingMode" Value="Auto" />
                <Setter Property="FontFamily" Value="{StaticResource TeacherYar.Fonts.IRANSans}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FlowDirection" Value="RightToLeft" />
            </Style>

            <Style x:Key="WorkButton" TargetType="{x:Type Button}">
                <Setter Property="Focusable" Value="True"/>
                <Setter Property="Background" Value="#15a4fa"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#1289d0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="WorkButtonGreen" TargetType="{x:Type Button}">
                <Setter Property="Focusable" Value="True"/>
                <Setter Property="Background" Value="#88d969"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#72b658"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="WorkButtonRed" TargetType="{x:Type Button}">
                <Setter Property="Focusable" Value="True"/>
                <Setter Property="Background" Value="#FFFF5656"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#FFD63E3E"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LoginButton" TargetType="{x:Type Button}">
                <Setter Property="Focusable" Value="True"/>
                <Setter Property="Background" Value="#15a4fa"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#1289d0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CancelButton" TargetType="{x:Type Button}">
                <Setter Property="Focusable" Value="True"/>
                <Setter Property="Background" Value="#bdbdbd"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#aaa9a9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="UpdateButton" TargetType="{x:Type Button}">
                <Setter Property="Focusable" Value="True"/>
                <Setter Property="Background" Value="#88d969"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <StackPanel x:Name="stackPanel" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <Image Source="Icons/Update.png" Width="16" Height="16" Margin="10,0,30,0"/>
                                    <ContentPresenter VerticalAlignment="Center"/>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#72b658"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NewClientButton" TargetType="{x:Type Button}">
                <Setter Property="Focusable" Value="True"/>
                <Setter Property="Background" Value="#f3f2f2"/>
                <Setter Property="Foreground" Value="#6f7a8b"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-3,0,0"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#15a4fa"/>
                                    <Setter Property="Foreground" Value="#ffffff"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="PasswordBox" TargetType="{x:Type PasswordBox}">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Background" Value="#f0f1f5"/>
                <Setter Property="BorderBrush" Value="#ebecf0"/>
                <Setter Property="Foreground" Value="#3b3f48"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="20,0,3,0"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="border" CornerRadius="0,0,2,2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>